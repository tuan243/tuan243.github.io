[1,["2aunqILLVHbaWWNe3bMoMW","4bvJkqmGlNhY0rPWnIp50S@f9941","e9mltQE89KpJyknkuj13AX@f9941","7dj5uJT9FMn6OrOOx83tfK@f9941","f0CAucVXxCV542Diw3pQqm@f9941","eb8gVpHRJHB636R5vwuBbZ@f9941","9f6bQL8LZNuoNEkfxXF5/a","ccJqGovHpFzpILtZNX0eHL@f9941","5e8H2HVcZAFqwR09t4tP3G@f9941","f19NE4xkBKUZKWpuiaCqm7@6c48a","9dNDG2cedA2b3+mNcJrHM0"],["node","_spriteFrame","_font","_normalSprite","root","timerLabel","shareButton","container","closeButton","data","_customMaterial","gradientTexture","_effectAsset"],[["cc.Node",["_name","_layer","_components","_prefab","_parent","_lpos","_children","_lscale"],1,9,4,1,5,2,5],["cc.Label",["_string","_actualFontSize","_fontSize","_enableWrapText","_isSystemFontUsed","_lineHeight","_enableOutline","_outlineWidth","node","__prefab","_color","_font","_outlineColor","_customMaterial"],-5,1,4,5,6,5,6],["cc.Sprite",["_sizeMode","_type","node","__prefab","_spriteFrame","_color"],1,1,4,6,5],["cc.Node",["_name","_layer","_parent","_components","_prefab","_lpos","_children"],1,1,12,4,5,2],["cc.UITransform",["node","__prefab","_contentSize","_anchorPoint"],3,1,4,5,5],["cc.Widget",["_alignFlags","_originalWidth","_originalHeight","_right","_top","node","__prefab"],-2,1,4],["cc.Prefab",["_name"],2],["cc.CompPrefabInfo",["fileId"],2],["69696XPn5ZFirHVX/C0uAzT",["node","__prefab","closeButton","container","shareButton","timerLabel"],3,1,4,1,1,1,1],["cc.PrefabInfo",["fileId","instance","targetOverrides","nestedPrefabInstanceRoots","root","asset"],-1,1,1],["cc.UIOpacity",["node","__prefab"],3,1,4],["2e3a6iDVwxFqYs10sV/ANiu",["node","__prefab"],3,1,4],["cc.BlockInputEvents",["node","__prefab"],3,1,4],["cc.Layout",["_resizeMode","_layoutType","_spacingX","_affectedByScale","node","__prefab"],-1,1,4],["cc.Button",["_transition","_zoomScale","node","__prefab"],1,1,4],["cc.EffectAsset",["_name","combinations","shaders","techniques"],-1],["cc.Material",["_name","_states","_defines","_props"],0,12]],[[7,0,2],[9,0,1,2,3,4,5,5],[4,0,1,2,1],[0,0,1,4,2,3,5,3],[0,0,1,4,6,2,3,5,3],[2,1,0,2,3,4,3],[2,2,3,4,1],[3,0,1,2,3,4,5,3],[5,0,1,2,5,6,4],[11,0,1,1],[1,0,1,2,5,3,4,8,9,10,11,7],[14,0,1,2,3,3],[6,0,2],[0,0,1,6,2,3,3],[0,0,1,4,2,3,3],[0,0,1,4,6,2,3,5,7,3],[0,0,1,4,2,3,5,7,3],[3,0,1,2,6,3,4,5,3],[4,0,1,2,3,1],[5,0,3,4,5,6,4],[8,0,1,2,3,4,5,1],[2,0,2,3,5,4,2],[10,0,1,1],[12,0,1,1],[13,0,1,2,3,4,5,5],[1,0,1,2,5,3,4,6,7,8,9,10,12,11,9],[1,0,1,2,3,4,8,9,10,11,6],[1,0,1,2,3,4,6,8,9,10,12,13,11,7],[1,0,1,2,5,3,4,8,9,10,7],[15,0,1,2,3,5],[16,0,1,2,3,4]],[[[[12,"GameSharingPopup"],[13,"GameSharingPopup",33554432,[-9,-10],[[2,-2,[0,"d3fBZxAd5L051hr+Izozxa"],[5,1280,720]],[8,45,2,2,-3,[0,"f7HKy6DidL+rFiJTG722Gw"]],[20,-8,[0,"f7n6fuUl1N0qHlDIsdg9bB"],-7,-6,-5,-4]],[1,"074xismQdLjaV1skGvHvQM",null,null,null,-1,0]],[4,"container",33554432,1,[-14,-15,-16,-17,-18,-19,-20],[[2,-11,[0,"29LMErVyRB47rVmmeWe4FP"],[5,620.17,526.9650893169293]],[5,2,0,-12,[0,"65KS0F6plKEJG/sRGEWakr"],12],[22,-13,[0,"44pmtahvJN3aeGpt+LRr3o"]]],[1,"fde3wXQ4tPm71fFY9UpIlu",null,null,null,1,0],[1,0,-6,0]],[7,"close-button",33554432,2,[[[2,-21,[0,"9fN/9/a6pAdLCM7YowbmV7"],[5,42,42]],[6,-22,[0,"3agRTVEiRCm6oxxcRLW8As"],3],[19,33,22.492999999999995,19.89054465846465,-23,[0,"bfuwiy8mZCZLpP/5W8Dwud"]],-24,[9,-25,[0,"4fJYEWrMNAA45DnHu138eb"]]],4,4,4,1,4],[1,"ee/1MOpLlMdqVHhSA1buKP",null,null,null,1,0],[1,266.592,222.59199999999998,0]],[17,"share-button",33554432,2,[-30],[[[2,-26,[0,"e5aiwlkOhGBrBgKYl1ZOaK"],[5,252,94]],[6,-27,[0,"adUDWxv8hL7JktKBkoFuEK"],6],-28,[9,-29,[0,"e5ZQroT19NK6D2hBEILWJn"]]],4,4,1,4],[1,"2bEEokmZxIPoF+Qo8987Cl",null,null,null,1,0],[1,0,-180.86,0]],[14,"dimscreen",33554432,1,[[2,-31,[0,"29P34qcZlEzY4LE4+dvCrY"],[5,1280,720]],[21,0,-32,[0,"a4n8BUD1VKvp+lv1KIjzQt"],[4,2432696320],0],[8,45,2,2,-33,[0,"8bn7H7AsxLb5mOKJ4UZIpJ"]],[23,-34,[0,"e7A6BwcHxBTIlhpa/hRJjy"]]],[1,"82CJ4OIYZETZyxZWVoNKaN",null,null,null,1,0]],[4,"layout",33554432,2,[-37,-38],[[2,-35,[0,"81N6QIhOdBrbpII8o3XSUZ"],[5,207.8828125,100]],[24,1,1,8,true,-36,[0,"55EU0OGPBCbaDVwyAUDGA1"]]],[1,"42KYr7iF5NPp8rE0VDZtpj",null,null,null,1,0],[1,0,-92.702,0]],[4,"title-bar",33554432,2,[-41],[[2,-39,[0,"dbl/W5dVxFxZk+T3OUV+/r"],[5,252,113]],[5,1,0,-40,[0,"26ygpuUE1GNq5xf+qACTO8"],2]],[1,"5b5d7feSxFBJF2MEKsnfI0",null,null,null,1,0],[1,0,247.954,0]],[15,"keo",33554432,2,[-44],[[2,-42,[0,"75cSsXO2tDaqTSI/9/orEl"],[5,98,85]],[6,-43,[0,"53KNXRugxHWaur7fB2jCQ1"],10]],[1,"541w2J3WdFnLFPLND3TbUB",null,null,null,1,0],[1,0,35.469,0],[1,0.976,0.976,0.976]],[3,"title-label",33554432,7,[[2,-45,[0,"4azhG4zapLLrfz57EbQ1Cy"],[5,162.12890625,108.8]],[25,"Chia Sẻ",44,44,80,false,false,true,4,-46,[0,"20HU/2v51HtapGlFcBT5/p"],[4,4290763770],[4,4281221994],1]],[1,"08Yfx/NX5DgbwEPPjxUwAv",null,null,null,1,0],[1,0,6.417,0]],[3,"panel-1",33554432,2,[[2,-47,[0,"34mMjTfqlDl6ILPUj20rA7"],[5,551.592,305.93500000000006]],[5,1,0,-48,[0,"40mFu3qFVMWIsa7qdup9aj"],4]],[1,"e8kouAcfxIRI0874+Ze76j",null,null,null,1,0],[1,0,29.813,0]],[3,"title-label-001",33554432,4,[[2,-49,[0,"76Xey8WH5DlqW5QF5Nv3oR"],[5,169.3603515625,75.6]],[10,"Chia sẻ",50,50,60,false,false,-50,[0,"fdvx3l4NhAd6kXQsCRz3oC"],[4,4293719292],5]],[1,"d8+hhuayxPvZeZJxDXa6tH",null,null,null,1,0],[1,0,5.156,0]],[3,"desc",33554432,2,[[2,-51,[0,"bayBkrmslEVLjNouRU7Pu+"],[5,373.966796875,90.39999999999999]],[26,"Chia sẻ game mỗi ngày\nđể nhận quà",34,34,false,false,-52,[0,"07+gXnPX9Ht7aDhn/uuIoG"],[4,4282930293],7]],[1,"a2a4bdvw5Ib6X2shCVDidm",null,null,null,1,0],[1,0,132.305,0]],[16,"win-amount-label",33554432,8,[[2,-53,[0,"bcW/XME5JLOKbpvuVAhV7y"],[5,126.900390625,54.4]],[27,"5000",50,50,false,false,true,-54,[0,"9ahiNw3+ZOObNcJ9+U44GN"],[4,4293719292],[4,4280965782],8,9]],[1,"f3vVtN3ahPb5GSwJAdjX7U",null,null,null,1,0],[1,0,-67.072,0],[1,1.0245901639344261,1.0245901639344261,1.0245901639344261]],[3,"reset-in-label",33554432,6,[[2,-55,[0,"b17fnfv/NHPpG/MlGE0H9B"],[5,127.75,73.08]],[10,"Làm mới :",28,28,58,false,false,-56,[0,"9bDb+g8ZRIA6HlbeV/aA5/"],[4,4282410408],11]],[1,"6ci3VH2iBL+ZqdHfM2/sSy",null,null,null,1,0],[1,-40.06640625,0,0]],[7,"timer",33554432,6,[[[18,-57,[0,"993inE8wxF2IE9yABXkgLr"],[5,72.1328125,73.08],[0,0,0.5]],-58],4,1],[1,"245/ZXFipK9JHZ7YpLzKyV",null,null,null,1,0],[1,31.80859375,0,0]],[11,3,1.1,3,[0,"b1/qBmZ/RG9ZDYPfg+kYp1"]],[11,3,1.1,4,[0,"cePwirnvZA6KJro3Fu25DN"]],[28,"50:49",28,28,58,false,false,15,[0,"35Qe7VnnZDWIqvjVKC/uqO"],[4,4282410408]]],0,[0,4,1,0,0,1,0,0,1,0,5,18,0,6,17,0,7,2,0,8,16,0,0,1,0,-1,5,0,-2,2,0,0,2,0,0,2,0,0,2,0,-1,7,0,-2,3,0,-3,10,0,-4,4,0,-5,12,0,-6,8,0,-7,6,0,0,3,0,0,3,0,0,3,0,-4,16,0,0,3,0,0,4,0,0,4,0,-3,17,0,0,4,0,-1,11,0,0,5,0,0,5,0,0,5,0,0,5,0,0,6,0,0,6,0,-1,14,0,-2,15,0,0,7,0,0,7,0,-1,9,0,0,8,0,0,8,0,-1,13,0,0,9,0,0,9,0,0,10,0,0,10,0,0,11,0,0,11,0,0,12,0,0,12,0,0,13,0,0,13,0,0,14,0,0,14,0,0,15,0,-2,18,0,9,1,58],[0,0,0,0,0,0,0,0,0,0,0,0,0,16,17,18],[1,2,1,1,1,2,1,2,10,2,1,2,1,3,3,2],[3,0,4,1,5,0,2,0,6,0,7,0,8,1,2,0]],[[[29,"../Material/effect/label-texture",[{}],[{"hash":3350057902,"name":"../Material/effect/label-texture|sprite-vs:vert|sprite-fs:frag","blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplerTextures":[{"name":"gradientTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","typename":"sampler2D","type":28,"count":1,"stageFlags":16,"tags":{"builtin":"local"},"defines":["USE_TEXTURE"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplerTextures":[{"name":"gradientTexture","type":28,"count":1,"stageFlags":16,"binding":1,"defines":[]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n    highp vec4 cc_localShadowBias;\n    highp vec4 cc_reflectionProbeData1;\n    highp vec4 cc_reflectionProbeData2;\n    highp vec4 cc_reflectionProbeBlendData1;\n    highp vec4 cc_reflectionProbeBlendData2;\n  };\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define REFLECTION_PROBE_TYPE_BLEND 3\n  #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n      #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_SPHERE 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_POINT 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n  #define TONE_MAPPING_ACES 0\n  #define TONE_MAPPING_LINEAR 1\n  #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n  #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n    #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n  #endif\n  #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n  #endif\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 color;\nout vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture(tex, uv).rgb, texture(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n  layout(std140) uniform ALPHA_TEST_DATA {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nin vec4 color;\nuniform sampler2D gradientTexture;\n#if USE_TEXTURE\n  in vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n    #if IS_GRAY\n      float gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\n      o.r = o.g = o.b = gray;\n    #endif\n  #endif\n  o.rgb *= CCSampleWithAlphaSeparated(gradientTexture, uv0).rgb;\n  o *= color;\n  ALPHA_TEST(o);\n  return o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n  uniform highp mat4 cc_matViewProj;\n  uniform highp vec4 cc_cameraPos;\n#if USE_LOCAL\n  uniform highp mat4 cc_matWorld;\n#endif\n#if SAMPLE_FROM_RT\n  #define QUATER_PI         0.78539816340\n  #define HALF_PI           1.57079632679\n  #define PI                3.14159265359\n  #define PI2               6.28318530718\n  #define PI4               12.5663706144\n  #define INV_QUATER_PI     1.27323954474\n  #define INV_HALF_PI       0.63661977237\n  #define INV_PI            0.31830988618\n  #define INV_PI2           0.15915494309\n  #define INV_PI4           0.07957747155\n  #define EPSILON           1e-6\n  #define EPSILON_LOWP      1e-4\n  #define LOG2              1.442695\n  #define EXP_VALUE         2.71828183\n  #define FP_MAX            65504.0\n  #define FP_SCALE          0.0009765625\n  #define FP_SCALE_INV      1024.0\n  #define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n      #define LIGHT_MAP_TYPE_DISABLED 0\n  #define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n  #define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n  #define REFLECTION_PROBE_TYPE_NONE 0\n  #define REFLECTION_PROBE_TYPE_CUBE 1\n  #define REFLECTION_PROBE_TYPE_PLANAR 2\n  #define REFLECTION_PROBE_TYPE_BLEND 3\n  #define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n      #define LIGHT_TYPE_DIRECTIONAL 0.0\n  #define LIGHT_TYPE_SPHERE 1.0\n  #define LIGHT_TYPE_SPOT 2.0\n  #define LIGHT_TYPE_POINT 3.0\n  #define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n  #define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n  #define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n  #define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n  #define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n  #define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n  #define TONE_MAPPING_ACES 0\n  #define TONE_MAPPING_LINEAR 1\n  #define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n  #ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n    #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n  #endif\n  #ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n    #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n  #endif\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 color;\nvarying vec2 uv0;\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  #if USE_PIXEL_ALIGNMENT\n    pos = cc_matView * pos;\n    pos.xyz = floor(pos.xyz);\n    pos = cc_matProj * pos;\n  #else\n    pos = cc_matViewProj * pos;\n  #endif\n  uv0 = a_texCoord;\n  #if SAMPLE_FROM_RT\n    uv0 = cc_cameraPos.w > 1.0 ? vec2(uv0.x, 1.0 - uv0.y) : uv0;\n  #endif\n  color = a_color;\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\nvec4 CCSampleWithAlphaSeparated(sampler2D tex, vec2 uv) {\n#if CC_USE_EMBEDDED_ALPHA\n  return vec4(texture2D(tex, uv).rgb, texture2D(tex, uv + vec2(0.0, 0.5)).r);\n#else\n  return texture2D(tex, uv);\n#endif\n}\n#if USE_ALPHA_TEST\n      uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 color;\nuniform sampler2D gradientTexture;\n#if USE_TEXTURE\n  varying vec2 uv0;\n  uniform sampler2D cc_spriteTexture;\n#endif\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n    o *= CCSampleWithAlphaSeparated(cc_spriteTexture, uv0);\n    #if IS_GRAY\n      float gray  = 0.2126 * o.r + 0.7152 * o.g + 0.0722 * o.b;\n      o.r = o.g = o.b = gray;\n    #endif\n  #endif\n  o.rgb *= CCSampleWithAlphaSeparated(gradientTexture, uv0).rgb;\n  o *= color;\n  ALPHA_TEST(o);\n  return o;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","defines":["USE_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":56,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":43}},"defines":[{"name":"USE_LOCAL","type":"boolean"},{"name":"SAMPLE_FROM_RT","type":"boolean"},{"name":"USE_PIXEL_ALIGNMENT","type":"boolean"},{"name":"CC_USE_EMBEDDED_ALPHA","type":"boolean"},{"name":"USE_ALPHA_TEST","type":"boolean"},{"name":"USE_TEXTURE","type":"boolean"},{"name":"IS_GRAY","type":"boolean"}]}],[{"passes":[{"program":"../Material/effect/label-texture|sprite-vs:vert|sprite-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"alphaThreshold":{"type":13,"value":[0.5]},"gradientTexture":{"value":"white","type":28}}}]}]]],0,0,[],[],[]],[[[30,"gradient-label",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true}],[[[{},"gradientTexture",6,0]],11]]],0,0,[0,0],[11,12],[9,10]]]]
